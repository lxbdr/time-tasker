import { type NextPage } from "next";
import Head from "next/head";
import { ChangeEvent, useState } from "react";

type TaskTemplateSchema = {
  id: number;
  name: string;
  description: string;
  checklists: ChecklistTemplateSchema[];
};

type ChecklistTemplateSchema = {
  id: number;
  name: string;
  description: string;
  bullets: BulletTemplateSchema[];
};

type BulletTemplateSchema = {
  id: number;
  name: string;
  description: string;
};

const Home: NextPage = () => {
  const [taskTemplates, setTaskTemplates] = useState<TaskTemplateSchema[]>([]);
  const [selectedTemplateId, setSelectedTemplateId] = useState("");

  const availableTaskTemplates: TaskTemplateSchema[] = [
    {
      id: 10,
      name: "Grundsetup",
      description: "",
      checklists: [
        {
          id: 100,
          name: "WordPress installieren",
          description: "",
          bullets: [
            {
              id: 1,
              name: "Datenbank anlegen",
              description: "",
            },
            {
              id: 2,
              name: "User anlegen",
              description: "",
            },
          ],
        },
        {
          id: 200,
          name: "Lokale Umgebung einrichten",
          description: "",
          bullets: [
            {
              id: 3,
              name: "Vagrant installieren",
              description: "",
            },
          ],
        },
      ],
    },
  ];

  function addTaskTemplate(id: number) {
    // find id
    const selectedTemplate = availableTaskTemplates.find((el) => el.id === id);
    if (!selectedTemplate) {
      console.error("invalid selected template id");
      return;
    }

    setTaskTemplates([...taskTemplates, selectedTemplate]);
  }

  function handleAddTaskTemplate() {
    addTaskTemplate(Number.parseInt(selectedTemplateId));
  }

  return (
    <>
      <Head>
        <title>Neues Projekt erstellen</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col items-center justify-center bg-gray-200">
        <div>Neues Projekt anlegen</div>
        <div>
          <label htmlFor="">
            <div>Projektname</div>
            <input type="text" />
          </label>
        </div>
        <div>
          <label htmlFor="">
            <div>Projektbeschreibung</div>
            <textarea name="description" id=""></textarea>
          </label>
        </div>
        <div>
          <h2>Taskvorlagen hinzuf체gen</h2>
          <select
            name=""
            id=""
            value={selectedTemplateId}
            onChange={(ev) => {
              const val = ev.target.value;
              setSelectedTemplateId(val);
            }}
            className={""}
          >
            <option value={""} selected disabled>
              Bitte w채hlen
            </option>
            {availableTaskTemplates.map((task) => (
              <option key={task.name} value={task.id}>
                {task.name}
              </option>
            ))}
          </select>
          <button type="button" onClick={handleAddTaskTemplate}>
            Template hinzuf체gen
          </button>
          <div>Hinzugef체gte Templates</div>
          <ul>
            {taskTemplates.map((taskTemplate) => (
              <li key={taskTemplate.id}>
                <h3>{taskTemplate.name}</h3>
                <div>Checklisten:</div>
                <ul>
                  {taskTemplate.checklists.map((checklist) => (
                    <li key={checklist.id}>{checklist.name}</li>
                  ))}
                </ul>
              </li>
            ))}
          </ul>
        </div>
        <div>
          <button type={"button"} className={"bg-green-400 text-white text-sm p-2 rounded"}>Projekt anlegen</button>
        </div>
      </main>
    </>
  );
};

export default Home;
